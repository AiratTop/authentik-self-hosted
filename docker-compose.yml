services:
  authentik-redis:
    container_name: authentik-redis
    hostname: authentik-redis
    image: redis:alpine
    networks: ['shared_network']
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    command: >
      --requirepass ${REDIS_PWD}
      --bind 0.0.0.0
      --save 600 1
    volumes:
      - ./data/authentik-redis:/data
  authentik-psql:
    container_name: authentik-psql
    hostname: authentik-psql
    image: postgres:17
    networks: ['shared_network']
    restart: always
    environment:
      POSTGRES_USER: authentik
      POSTGRES_PASSWORD: ${PSQL_PWD}
      POSTGRES_DB: authentik
    volumes:
      - ./data/authentik-psql:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U authentik -d authentik']
      interval: 5s
      timeout: 5s
      retries: 10
  authentik-server:
    command: server
    container_name: authentik-server
    hostname: authentik-server
    image: authentik/server:2025.8
    networks: ['shared_network']
    ports:
    - '9000:9000'
    - '9443:9443'
    restart: always
    depends_on:
      authentik-psql:
        condition: service_healthy
      authentik-redis:
        condition: service_healthy
    environment:
      AUTHENTIK_POSTGRESQL__HOST: authentik-psql
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PSQL_PWD}
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_REDIS__PASSWORD: ${REDIS_PWD}
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY:?secret key required}
    volumes:
    - ./data/media:/media
    - ./data/custom-templates:/templates
  authentik-worker:
    command: worker
    container_name: authentik-worker
    hostname: authentik-worker
    image: authentik/server:2025.8
    networks: ['shared_network']
    restart: always
    depends_on:
      authentik-psql:
        condition: service_healthy
      authentik-redis:
        condition: service_healthy
    environment:
      AUTHENTIK_POSTGRESQL__HOST: authentik-psql
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PSQL_PWD}
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_REDIS__PASSWORD: ${REDIS_PWD}
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY:?secret key required}
    user: root
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - ./data/media:/media
    - ./data/certs:/certs
    - ./data/custom-templates:/templates
networks:
  shared_network:
    name: shared_network
    driver: bridge
    external: true